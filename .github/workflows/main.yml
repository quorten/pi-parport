on: [ pull_request, push ]
name: ci
jobs:
  check-pr:
    name: validate commits
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - run: git fetch origin master
    - uses: flux-framework/pr-validator@master

  checkpatch:
    name: kernel style check
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: check style
      run: make -C driver check

  build-driver-5-4:
    name: build driver against linux-5.4
    runs-on: ubuntu-20.04
    steps:
    - name: install libelf-dev
      run: sudo apt-get -y install libelf-dev
    - name: install linux-headers
      run: sudo apt-get install linux-headers-5.4.0-52-generic
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: build driver
      run: KERNEL_VERSION=5.4.0-52-generic KERNEL_HAS_PARPORT=1 make -C driver

  load-driver-latest:
    name: build driver against running kernel and load it
    runs-on: ubuntu-20.04
    steps:
    - name: install libelf-dev
      run: sudo apt-get -y install libelf-dev
    - name: install linux-headers
      run: sudo apt-get install linux-headers-$(uname -r)
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.event.pull_request.head.sha }}
        fetch-depth: 0
    - name: build driver
      run: KERNEL_HAS_PARPORT=1 make -C driver
    - name: clear kernel log messages
      run: sudo dmesg --clear
    - name: load dependent kernel modules
      run: sudo modprobe parport
    - name: load driver
      run: sudo insmod driver/parport_gpio.ko \
    - name: print kernel log messages
      if: always()
      run: sudo dmesg
    - name: unload kernel modules
      if: always()
      run: sudo rmmod parport_gpio parport

  check-hardware-v5:
    name: check v5 hardware
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: |
        sudo add-apt-repository --yes ppa:kicad/kicad-8.0-releases
        sudo apt-get update
        sudo apt-get install -y \
            make \
            kicad=8.0.5*
    - name: initialize kicad config
      run: |
        mkdir -p $HOME/.config/kicad/8.0
        cp /usr/share/kicad/template/fp-lib-table $HOME/.config/kicad/8.0/
        cp /usr/share/kicad/template/sym-lib-table $HOME/.config/kicad/8.0/
    - name: display kicad version
      run: |
        echo "Kicad:"
        kicad-cli --version
    - name: ERC
      run: |
        make -C hardware/v5 check_erc
    - name: DRC
      run: |
        make -C hardware/v5 check_drc
